// Code generated by candi v1.17.15.

package graphqlhandler

import (
	"context"
	"time"

	"monorepo/services/library-service/internal/modules/book/domain"

	"github.com/golangid/candi/logger"
)

// ListenData resolver, broadcast event to client
func (s *GraphQLHandler) ListenData(ctx context.Context) <-chan domain.ResponseBook {
	output := make(chan domain.ResponseBook)

	go func() {
		// example send event to client every 5 seconds
		tick := time.NewTicker(5 * time.Second)
		for {
			select {
			case <-tick.C:
				data := domain.ResponseBook{
					CreatedAt: time.Now().Format(time.RFC3339),
					UpdatedAt: time.Now().Format(time.RFC3339),
				}
				data.ID = 1
				output <- data
			case <-ctx.Done():
				tick.Stop()
				logger.LogI("done")
				return
			}
		}
	}()

	return output
}
